from typing import Dict, Any, List


def format_recommendation_message(weather_data: Dict[str, Any],
                                  recommendations: Dict[str, List]) -> str:
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∞–∫—Ü–µ–Ω—Ç–æ–º –Ω–∞ —É—Ç—Ä–µ–Ω–Ω–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    """
    day_analysis = weather_data.get('day_analysis', {})
    morning_temp = day_analysis.get('morning', {}).get('avg_temp', weather_data['avg_temp'])

    temp_icon = _get_temperature_icon(morning_temp)

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –¥–Ω—è –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–∞
    temp_diff = day_analysis.get('day', {}).get('avg_temp', 0) - morning_temp
    if temp_diff > 10:
        title = f"üîÑ –°–ï–ì–û–î–ù–Ø: –£–¢–†–û–ú –•–û–õ–û–î–ù–û ‚Üí –î–ù–ï–ú –¢–ï–ü–õ–û"
    elif temp_diff > 5:
        title = f"üìä –°–ï–ì–û–î–ù–Ø: –£–¢–†–û–ú –ü–†–û–•–õ–ê–î–ù–û ‚Üí –î–ù–ï–ú –ö–û–ú–§–û–†–¢–ù–û"
    else:
        title = f"{temp_icon} –ß–¢–û –û–î–ï–¢–¨ –°–ï–ì–û–î–ù–Ø"

    message = f"""
{title}
üìç {weather_data['location']} ‚Ä¢ {weather_data['date']}

üå°Ô∏è –ü–û–ì–û–î–ê –ü–û –í–†–ï–ú–ï–ù–ò –°–£–¢–û–ö:
{_format_day_temperature_analysis(day_analysis)}

üéØ –°–ï–ì–û–î–ù–Ø –í–ê–ñ–ù–û:
{_format_list(recommendations['day_strategy'])}

üëï –ö–û–ú–ü–õ–ï–ö–¢ –û–î–ï–ñ–î–´:
‚Ä¢ –ì–æ–ª–æ–≤–Ω–æ–π —É–±–æ—Ä: {_format_first_items(recommendations['headwear'])}
‚Ä¢ –í–µ—Ä—Ö: {_format_first_items(recommendations['upper_body'], 5)}
‚Ä¢ –ù–∏–∑: {_format_first_items(recommendations['lower_body'], 5)}
‚Ä¢ –û–±—É–≤—å: {_format_first_items(recommendations['footwear'], 5)}

üìå –ü–û–õ–ï–ó–ù–´–ï –°–û–í–ï–¢–´:
{_format_important_tips(recommendations['important_tips'])}
"""

    return message.strip()


def _format_important_tips(items: list) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –≤–∞–∂–Ω—ã–µ —Å–æ–≤–µ—Ç—ã"""
    if not items:
        return "‚Ä¢ –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ–¥—Ö–æ–¥—è—Ç –¥–ª—è —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–π –ø–æ–≥–æ–¥—ã"

    formatted = []
    for item in items[:4]:
        formatted.append(f"‚Ä¢ {item}")
    return "\n".join(formatted)


def _format_day_temperature_analysis(day_analysis: Dict) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∞–Ω–∞–ª–∏–∑ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã —Å –∞–∫—Ü–µ–Ω—Ç–æ–º –Ω–∞ —É—Ç—Ä–æ"""
    if not day_analysis:
        return "‚Ä¢ –î–∞–Ω–Ω—ã–µ –æ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã"

    morning = day_analysis.get('morning', {})
    day = day_analysis.get('day', {})
    evening = day_analysis.get('evening', {})

    lines = [
        f"‚Ä¢ üåÖ –£–¢–†–û (6-10): {morning.get('avg_temp', 0):.0f}¬∞C, {morning.get('condition', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}",
        f"‚Ä¢ ‚òÄÔ∏è –î–ï–ù–¨ (11-16): {day.get('avg_temp', 0):.0f}¬∞C, {day.get('condition', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}",
        f"‚Ä¢ üåá –í–ï–ß–ï–† (17-21): {evening.get('avg_temp', 0):.0f}¬∞C, {evening.get('condition', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}",
    ]

    temp_diff = day.get('avg_temp', 0) - morning.get('avg_temp', 0)
    if temp_diff > 8:
        lines.append(f"‚Ä¢ üìà –ü–µ—Ä–µ–ø–∞–¥: +{temp_diff:.0f}¬∞C - —É—Ç—Ä–æ–º –Ω—É–∂–Ω–∞ –∫—É—Ä—Ç–∫–∞, –¥–Ω–µ–º –º–æ–∂–Ω–æ –±–µ–∑")
    elif temp_diff > 5:
        lines.append(f"‚Ä¢ üìà –ü–µ—Ä–µ–ø–∞–¥: +{temp_diff:.0f}¬∞C - —É—á–∏—Ç—ã–≤–∞–π—Ç–µ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –æ–¥–µ–∂–¥—ã")

    return "\n".join(lines)


def _format_first_items(items: list, max_items: int = 3) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤"""
    if not items:
        return "–ø–æ –ø–æ–≥–æ–¥–µ"
    return ", ".join(items[:max_items])


def _format_list(items: list) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–ø–∏—Å–æ–∫ –≤ –≤–∏–¥–µ –ø—É–Ω–∫—Ç–æ–≤"""
    if not items:
        return "‚Ä¢ –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏"
    return "\n".join([f"‚Ä¢ {item}" for item in items])


def _get_temperature_icon(temp: float) -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–∫–æ–Ω–∫—É –¥–ª—è –£–¢–†–ï–ù–ù–ï–ô —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã"""
    if temp < -20:
        return "ü•∂"
    elif temp < -10:
        return "‚ùÑÔ∏è"
    elif temp < -3:
        return "üßä"
    elif temp < 3:
        return "üå®Ô∏è"
    elif temp < 8:
        return "üå´Ô∏è"
    elif temp < 13:
        return "üå§Ô∏è"
    elif temp < 18:
        return "üòä"
    elif temp < 23:
        return "‚òÄÔ∏è"
    elif temp < 28:
        return "üî•"
    else:
        return "üå°Ô∏è"
