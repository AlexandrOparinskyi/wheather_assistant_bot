from typing import Dict, Any, List


def format_recommendation_message(weather_data: Dict[str, Any],
                                  recommendations: Dict[str, List]) -> str:
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∫—Ä–∞—Ç–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏
    """
    temp_icon = _get_temperature_icon(weather_data['avg_temp'])
    day_analysis = weather_data.get('day_analysis', {})

    # –ó–∞–≥–æ–ª–æ–≤–æ–∫
    if day_analysis.get('is_big_difference'):
        title = f"üîÑ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ù–ê –î–ï–ù–¨ –° –ë–û–õ–¨–®–ò–ú –ü–ï–†–ï–ü–ê–î–û–ú –¢–ï–ú–ü–ï–†–ê–¢–£–†"
    else:
        title = f"{temp_icon} –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –û–î–ï–ñ–î–ï –ù–ê –°–ï–ì–û–î–ù–Ø"

    message = f"""
{title}
üìç {weather_data['location']} ‚Ä¢ {weather_data['date']}

üå°Ô∏è –¢–ï–ú–ü–ï–†–ê–¢–£–†–ù–´–ô –†–ï–ñ–ò–ú –î–ù–Ø:
{_format_day_temperature_analysis(day_analysis)}

üéØ –°–¢–†–ê–¢–ï–ì–ò–Ø –ù–ê –î–ï–ù–¨:
{_format_list(recommendations['day_strategy'])}

üß• –ß–¢–û –û–î–ï–¢–¨ (–û–°–ù–û–í–ù–û–ï):
üëí –ì–æ–ª–æ–≤–Ω–æ–π —É–±–æ—Ä: {_format_first_items(recommendations['headwear'])}
üëö –í–µ—Ä—Ö (–º–Ω–æ–≥–æ—Å–ª–æ–π–Ω–æ—Å—Ç—å): {_format_first_items(recommendations['upper_body'])}
üëñ –ù–∏–∑: {_format_first_items(recommendations['lower_body'])}
üëü –û–±—É–≤—å: {_format_first_items(recommendations['footwear'])}

üí° –í–ê–ñ–ù–û: {_format_important_tips(recommendations['important_tips'])}
"""

    return message.strip()


def _format_important_tips(items: list, max_items: int = 3):
    if not items:
        return "—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç"
    return "\n" + "\n".join(items[:max_items])


def _format_first_items(items: list, max_items: int = 3) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤"""
    if not items:
        return "—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç"
    return ", ".join(items[:max_items])


def _format_day_temperature_analysis(day_analysis: Dict) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∞–Ω–∞–ª–∏–∑ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –ø–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫"""
    if not day_analysis:
        return "‚Ä¢ –î–∞–Ω–Ω—ã–µ –æ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã"

    morning = day_analysis.get('morning', {})
    day = day_analysis.get('day', {})
    evening = day_analysis.get('evening', {})

    lines = [
        f"‚Ä¢ üåÖ –£—Ç—Ä–æ (6-10—á): {morning.get('avg_temp', 0):.1f}¬∞C - {morning.get('condition', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}",
        f"‚Ä¢ ‚òÄÔ∏è –î–µ–Ω—å (11-16—á): {day.get('avg_temp', 0):.1f}¬∞C - {day.get('condition', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}",
        f"‚Ä¢ üåá –í–µ—á–µ—Ä (17-21—á): {evening.get('avg_temp', 0):.1f}¬∞C - {evening.get('condition', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}",
    ]

    if day_analysis.get('temp_difference', 0) > 5:
        lines.append(
            f"‚Ä¢ üîÑ –ü–µ—Ä–µ–ø–∞–¥ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä: +{day_analysis['temp_difference']:.1f}¬∞C –≤ —Ç–µ—á–µ–Ω–∏–µ –¥–Ω—è")

    if day_analysis.get('is_big_difference'):
        lines.append("‚Ä¢ ‚ö†Ô∏è –ë–æ–ª—å—à–æ–π –ø–µ—Ä–µ–ø–∞–¥! –û–¥–µ–≤–∞–π—Ç–µ—Å—å —Å–ª–æ—è–º–∏")

    return "\n".join(lines)


def _format_list(items: list) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–ø–∏—Å–æ–∫ –≤ –≤–∏–¥–µ –ø—É–Ω–∫—Ç–æ–≤"""
    if not items:
        return "‚Ä¢ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç"
    return "\n".join([f"‚Ä¢ {item}" for item in items])


def _format_hourly_forecast(forecast: list) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –ø–æ—á–∞—Å–æ–≤–æ–π –ø—Ä–æ–≥–Ω–æ–∑"""
    if not forecast:
        return "‚Ä¢ –¥–∞–Ω–Ω—ã–µ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã"

    lines = []
    for hour in forecast:
        rain_icon = " ‚òî" if hour['chance_of_rain'] > 50 else ""
        lines.append(
            f"‚Ä¢ {hour['time']}: {hour['temp']}¬∞C, {hour['condition']}{rain_icon}")
    return "\n".join(lines)


def _get_temperature_icon(temp: float) -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–∫–æ–Ω–∫—É –¥–ª—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–º–∏ –¥–∏–∞–ø–∞–∑–æ–Ω–∞–º–∏"""
    if temp < -20: return "ü•∂üå°Ô∏è"
    elif temp < -10: return "ü•∂"
    elif temp < -5: return "‚ùÑÔ∏èüßä"
    elif temp < 0: return "‚ùÑÔ∏è"
    elif temp <= 5: return "üå®Ô∏è"
    elif temp <= 10: return "üå´Ô∏è"
    elif temp <= 15: return "üå§Ô∏è"
    elif temp <= 19: return "üòä"
    elif temp <= 24: return "‚òÄÔ∏è"
    elif temp <= 29: return "üî•"
    else: return "üå°Ô∏èüî•"


def _get_weather_icon(condition: str) -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–∫–æ–Ω–∫—É –¥–ª—è –ø–æ–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π"""
    condition_lower = condition.lower()
    if '–¥–æ–∂–¥—å' in condition_lower or '–ª–∏–≤–µ–Ω—å' in condition_lower:
        return "üåßÔ∏è"
    elif '–≥—Ä–æ–∑–∞' in condition_lower:
        return "‚õàÔ∏è"
    elif '—Å–Ω–µ–≥' in condition_lower:
        return "‚ùÑÔ∏è"
    elif '—Ç—É–º–∞–Ω' in condition_lower:
        return "üå´Ô∏è"
    elif '–æ–±–ª–∞—á–Ω–æ' in condition_lower:
        return "‚òÅÔ∏è"
    elif '—è—Å–Ω–æ' in condition_lower or '—Å–æ–ª–Ω–µ—á–Ω–æ' in condition_lower:
        return "‚òÄÔ∏è"
    else:
        return "üå§Ô∏è"


def _get_rain_icon(chance: int) -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–∫–æ–Ω–∫—É –¥–ª—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏ –¥–æ–∂–¥—è"""
    if chance > 80:
        return "‚õàÔ∏è"
    elif chance > 50:
        return "üåßÔ∏è"
    elif chance > 20:
        return "‚òî"
    else:
        return ""


def _get_uv_icon(uv: float) -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–∫–æ–Ω–∫—É –¥–ª—è –£–§-–∏–Ω–¥–µ–∫—Å–∞"""
    if uv > 8:
        return "‚ö†Ô∏è"
    elif uv > 6:
        return "üîÜ"
    elif uv > 3:
        return "üòé"
    else:
        return ""